/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 public/model.glb --transform 
Files: public/model.glb [956.42KB] > /Users/waiyanminaung/3d-web/3d-portfolio-app/model-transformed.glb [204.88KB] (79%)
*/

import React, { type JSX } from "react";
import { useGraph } from "@react-three/fiber";
import { useGLTF } from "@react-three/drei";
import { SkeletonUtils } from "three-stdlib";
import type { SkinnedMesh } from "three";

export default function Me(props: JSX.IntrinsicElements["group"]) {
  const { scene } = useGLTF("/assets/model-transformed.glb", true);
  const clone = React.useMemo(() => SkeletonUtils.clone(scene), [scene]);
  const { nodes, materials } = useGraph(clone);
  return (
    <group {...props} scale={0.5} dispose={null}>
      <primitive object={nodes.Hips} />

      <skinnedMesh
        geometry={(nodes.avaturn_body as SkinnedMesh).geometry}
        material={materials.avaturn_body_material}
        skeleton={(nodes.avaturn_body as SkinnedMesh).skeleton}
        frustumCulled={false}
      />
    </group>
  );
}

useGLTF.preload("/assets/model-transformed.glb");
